# Your keymap
#
# Atom keymaps work similarly to style sheets. Just as style sheets use
# selectors to apply styles to elements, Atom keymaps use selectors to associate
# keystrokes with events in specific contexts. Unlike style sheets however,
# each selector can only be declared once.
#
# You can create a new keybinding in this file by typing "key" and then hitting
# tab.
#
# Here's an example taken from Atom's built-in keymap:
#
# 'atom-text-editor':
#   'enter': 'editor:newline'

'atom-text-editor.vim-mode-plus.normal-mode':
  'K': 'editor:newline'
  's': 'core:save'
  'g f':      'open-this:here'
  'ctrl-w f': 'open-this:split-down'
  'ctrl-w F': 'open-this:split-right'


'atom-text-editor.vim-mode-plus:not(.insert-mode)':
  'ctrl-h k': 'window:focus-pane-above'
  'ctrl-h h': 'window:focus-pane-on-left'
  'ctrl-h j': 'window:focus-pane-below'
  'ctrl-h l': 'window:focus-pane-on-right'
  'cmd-enter': 'unset!'
  # Allow j and k to move within a soft-wrapped line,
  # whereas up and down arrows move hard buffer lines.
  'j': 'vim-mode-plus:move-down-screen'
  'k': 'vim-mode-plus:move-up-screen'

'atom-workspace:not(.editor)':
  'cmd-enter': 'unset!'
'.platform-darwin atom-text-editor[data-grammar="source julia"]':
  'cmd-enter': 'julia-client:run-block'



'atom-text-editor.vim-mode-plus.insert-mode':
  'ctrl-w': ''

'atom-workspace':
  'ctrl-i': 'cursor-history:next'
  'ctrl-o': 'cursor-history:prev'
  'ctrl-cmd-i': 'cursor-history:next-within-editor'
  'ctrl-cmd-o': 'cursor-history:prev-within-editor'

  'ctrl-cmd-shift-left': 'history-tracker:go-backwards-in-history'
  'ctrl-cmd-shift-right': 'history-tracker:go-forward-in-history'


#
# 'atom-workspace':
#   'ctrl-shift-p': 'core:move-up'
#   'ctrl-p': 'core:move-down'
#
# You can find more information about keymaps in these guides:
# * http://flight-manual.atom.io/using-atom/sections/basic-customization/#_customizing_keybindings
# * http://flight-manual.atom.io/behind-atom/sections/keymaps-in-depth/
#
# If you're having trouble with your keybindings not working, try the
# Keybinding Resolver: `Cmd+.` on macOS and `Ctrl+.` on other platforms. See the
# Debugging Guide for more information:
# * http://flight-manual.atom.io/hacking-atom/sections/debugging/#check-the-keybindings
#
# This file uses CoffeeScript Object Notation (CSON).
# If you are unfamiliar with CSON, you can read more about it in the
# Atom Flight Manual:
# http://flight-manual.atom.io/using-atom/sections/basic-customization/#_cson
